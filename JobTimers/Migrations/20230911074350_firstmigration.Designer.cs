// <auto-generated />
using System;
using JobTimers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobTimers.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230911074350_firstmigration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JobTimers.models.FacebookPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<string>("Image_Url")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Publishtime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Video_url")
                        .HasColumnType("longtext");

                    b.Property<string>("media_type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("facebookPost");
                });

            modelBuilder.Entity("JobTimers.models.InstagramPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<string>("Image_Url")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Publishtime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Video_url")
                        .HasColumnType("longtext");

                    b.Property<string>("media_type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("InstagramPost");
                });

            modelBuilder.Entity("JobTimers.models.LinkedInInsight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Publishtime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("clickCount")
                        .HasColumnType("int");

                    b.Property<double>("engagement")
                        .HasColumnType("double");

                    b.Property<int>("impressionCount")
                        .HasColumnType("int");

                    b.Property<bool>("isLikedByAuthor")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("shareCount")
                        .HasColumnType("int");

                    b.Property<int>("totalComments")
                        .HasColumnType("int");

                    b.Property<int>("totalLikes")
                        .HasColumnType("int");

                    b.Property<int>("videoViews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LinkedInInsight");
                });

            modelBuilder.Entity("JobTimers.models.LinkedInPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ChannelId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Publishtime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("author_profilelink")
                        .HasColumnType("longtext");

                    b.Property<string>("author_urn")
                        .HasColumnType("longtext");

                    b.Property<string>("author_username")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("insightId")
                        .HasColumnType("char(36)");

                    b.Property<string>("mediaUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("mediaUrn")
                        .HasColumnType("longtext");

                    b.Property<string>("message")
                        .HasColumnType("longtext");

                    b.Property<string>("photo")
                        .HasColumnType("longtext");

                    b.Property<string>("postId")
                        .HasColumnType("longtext");

                    b.Property<string>("video")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("insightId");

                    b.ToTable("LinkedInPost");
                });

            modelBuilder.Entity("JobTimers.models.TwitterPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Publishtime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TwitterPostId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TwitterPost");
                });

            modelBuilder.Entity("JobTimers.models.LinkedInPost", b =>
                {
                    b.HasOne("JobTimers.models.LinkedInInsight", "insight")
                        .WithMany()
                        .HasForeignKey("insightId");

                    b.Navigation("insight");
                });
#pragma warning restore 612, 618
        }
    }
}
