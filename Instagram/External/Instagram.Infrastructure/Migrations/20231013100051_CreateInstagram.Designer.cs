// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SNM.Instagram.Infrastructure.DataContext;

#nullable disable

namespace SNM.Instagram.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231013100051_CreateInstagram")]
    partial class CreateInstagram
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CoverPhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.Property<string>("TimeZone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Channel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChannelProfileId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChannelTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ChannelProfileId");

                    b.HasIndex("ChannelTypeId");

                    b.ToTable("Channel");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.ChannelProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccessToken")
                        .HasColumnType("longtext");

                    b.Property<string>("CoverPhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Headline")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileLink")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileUserId")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshTokenExpiresIn")
                        .HasColumnType("longtext");

                    b.Property<string>("Scope")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("expires_in")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ChannelProfile");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.ChannelType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ChannelType");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.InstagramChannel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ChannelAPI")
                        .HasColumnType("longtext");

                    b.Property<Guid>("ChannelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserAccessToken")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("InstagramChannels");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.InstagramPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("InstagramChannelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("InstagramPostId")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("PublicationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduleTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("InstagramChannelId");

                    b.HasIndex("PostId");

                    b.ToTable("InstagramPosts");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("Media_type")
                        .HasColumnType("int");

                    b.Property<string>("Media_url")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Caption")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Channel", b =>
                {
                    b.HasOne("SNM.Instagram.Domain.Entities.Brand", "Brand")
                        .WithMany("SocialChannels")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SNM.Instagram.Domain.Entities.ChannelProfile", "ChannelProfile")
                        .WithMany("SocialChannels")
                        .HasForeignKey("ChannelProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SNM.Instagram.Domain.Entities.ChannelType", "ChannelType")
                        .WithMany()
                        .HasForeignKey("ChannelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("ChannelProfile");

                    b.Navigation("ChannelType");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.InstagramChannel", b =>
                {
                    b.HasOne("SNM.Instagram.Domain.Entities.Channel", "SocialChannel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SocialChannel");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.InstagramPost", b =>
                {
                    b.HasOne("SNM.Instagram.Domain.Entities.InstagramChannel", "InstagramChannel")
                        .WithMany()
                        .HasForeignKey("InstagramChannelId");

                    b.HasOne("SNM.Instagram.Domain.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.Navigation("InstagramChannel");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Media", b =>
                {
                    b.HasOne("SNM.Instagram.Domain.Entities.Post", "Post")
                        .WithMany("MediaData")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Brand", b =>
                {
                    b.Navigation("SocialChannels");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.ChannelProfile", b =>
                {
                    b.Navigation("SocialChannels");
                });

            modelBuilder.Entity("SNM.Instagram.Domain.Entities.Post", b =>
                {
                    b.Navigation("MediaData");
                });
#pragma warning restore 612, 618
        }
    }
}
